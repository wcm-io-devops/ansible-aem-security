- name: "Test authentication for '{{ aem_security_admin_user }}' with old/current password"
  uri:
    url: "{{ aem_security_url_password_check }}"
    method: GET
    user: "{{ aem_security_admin_user }}"
    password: "{{ aem_security_admin_password_old }}"
    force_basic_auth: yes
    status_code: "{{ aem_security_url_password_valid_code }},{{ aem_security_url_password_invalid_code }}"
  register: _check_old_password_result

- name: "Test authentication for '{{ aem_security_admin_user }}' with new password"
  uri:
    url: "{{ aem_security_url_password_check }}"
    method: GET
    user: "{{ aem_security_admin_user }}"
    password: "{{ aem_security_admin_password_new }}"
    force_basic_auth: yes
    status_code: "{{ aem_security_url_password_valid_code }},{{ aem_security_url_password_invalid_code }}"
  register: _check_new_password_result
  failed_when:
    - _check_new_password_result.status != aem_security_url_password_valid_code
  when:
    - _check_old_password_result.status != aem_security_url_password_valid_code

# change password when authentication with old/current was successful, new password is available and different to current one
- block:
  - name: "Get user path of '{{ aem_security_admin_user }}'"
    uri:
      url: "{{ aem_security_url_userinfo }}"
      method: GET
      user: "{{ aem_security_admin_user }}"
      password: "{{ aem_security_admin_password_old }}"
      force_basic_auth: yes
    register: _query_user_result

  - name: "Set new password for '{{ aem_security_admin_user }}'"
    uri:
      url: "{{ aem_security_url_password_set }}"
      method: POST
      user: "{{ aem_security_admin_user }}"
      password: "{{ aem_security_admin_password_old }}"
      body: "plain={{ aem_security_admin_password_new }}&verify={{ aem_security_admin_password_new }}&old={{ aem_security_admin_password_old }}&Path={{ _query_user_result.json.hits[0].path }}"
      force_basic_auth: yes
      status_code: 200
      headers:
        Content-Type: "application/x-www-form-urlencoded"
      return_content: yes
    register: _set_password_result
    failed_when: "'Password successfully changed.' not in _set_password_result.content"

  when: _check_old_password_result.status == aem_security_url_password_valid_code
